{
  "$defs": {
    "AnalysisConfig": {
      "description": "Configuration for the analysis data used in the verification.",
      "properties": {
        "label": {
          "description": "Label for the analysis that will be used in experiment results such as reports and figures.",
          "minLength": 1,
          "title": "Label",
          "type": "string"
        },
        "analysis_zarr": {
          "description": "Path to the zarr dataset containing the analysis data.",
          "minLength": 1,
          "title": "Analysis Zarr",
          "type": "string"
        }
      },
      "required": [
        "label",
        "analysis_zarr"
      ],
      "title": "AnalysisConfig",
      "type": "object"
    },
    "BaselineConfig": {
      "description": "Configuration for a single baseline to include in the verification.",
      "properties": {
        "baseline_id": {
          "description": "Identifier for the baseline, e.g. 'COSMO-E'.",
          "minLength": 1,
          "title": "Baseline Id",
          "type": "string"
        },
        "label": {
          "description": "Label for the baseline that will be used in experiment results such as reports and figures.",
          "minLength": 1,
          "title": "Label",
          "type": "string"
        },
        "root": {
          "description": "Root directory where the baseline data is stored.",
          "minLength": 1,
          "title": "Root",
          "type": "string"
        },
        "steps": {
          "description": "Forecast steps to be used from baseline, e.g. '10/120/1'.",
          "pattern": "^\\d*/\\d*/\\d*$",
          "title": "Steps",
          "type": "string"
        }
      },
      "required": [
        "baseline_id",
        "label",
        "root",
        "steps"
      ],
      "title": "BaselineConfig",
      "type": "object"
    },
    "BaselineItem": {
      "properties": {
        "baseline": {
          "$ref": "#/$defs/BaselineConfig"
        }
      },
      "required": [
        "baseline"
      ],
      "title": "BaselineItem",
      "type": "object"
    },
    "Dates": {
      "description": "Start/stop of the hindcast period and the launch frequency.",
      "properties": {
        "start": {
          "description": "First forecast initialisation as an ISO-8601 formatted string.",
          "title": "Start",
          "type": "string"
        },
        "end": {
          "description": "Last forecast initialisation as an ISO-8601 formatted string.",
          "title": "End",
          "type": "string"
        },
        "frequency": {
          "description": "Time between initialisations. Must be a combination of a number and a time unit (h or d).",
          "pattern": "^\\d+[hd]$",
          "title": "Frequency",
          "type": "string"
        }
      },
      "required": [
        "start",
        "end",
        "frequency"
      ],
      "title": "Dates",
      "type": "object"
    },
    "DefaultResources": {
      "description": "Default resource settings for job execution.",
      "properties": {
        "slurm_partition": {
          "description": "SLURM partition to use.",
          "title": "Slurm Partition",
          "type": "string"
        },
        "cpus_per_task": {
          "description": "Number of CPUs per task.",
          "minimum": 1,
          "title": "Cpus Per Task",
          "type": "integer"
        },
        "mem_mb_per_cpu": {
          "description": "Memory per CPU in MB.",
          "minimum": 1,
          "title": "Mem Mb Per Cpu",
          "type": "integer"
        },
        "runtime": {
          "description": "Maximum runtime, e.g. '1h'.",
          "title": "Runtime",
          "type": "string"
        }
      },
      "required": [
        "slurm_partition",
        "cpus_per_task",
        "mem_mb_per_cpu",
        "runtime"
      ],
      "title": "DefaultResources",
      "type": "object"
    },
    "ExplicitDates": {
      "description": "Explicit list of initialisation dates as ISO-8601 formatted strings.",
      "items": {
        "type": "string"
      },
      "title": "ExplicitDates",
      "type": "array"
    },
    "ForecasterConfig": {
      "description": "Single training run stored in MLflow.",
      "properties": {
        "mlflow_id": {
          "description": "The mlflow run ID, as a 32-character hexadecimal string.",
          "maxLength": 32,
          "minLength": 32,
          "title": "Mlflow Id",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The label for the run that will be used in experiment results such as reports and figures.",
          "title": "Label"
        },
        "steps": {
          "description": "Forecast lead times in hours, formatted as 'start/end/step'. The range includes the start lead time and continues with the given step until reaching or exceeding the end lead time. Example: '0/120/6' for lead times every 6 hours up to 120 h, or '0/33/6' up to 30 h.",
          "title": "Steps",
          "type": "string"
        },
        "extra_dependencies": {
          "description": "List of extra dependencies to install for this model. These will be added to the pyproject.toml file in the run directory.",
          "items": {
            "type": "string"
          },
          "title": "Extra Dependencies",
          "type": "array"
        },
        "inference_resources": {
          "anyOf": [
            {
              "$ref": "#/$defs/InferenceResources"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Resource requirements for inference jobs (optional; defaults handled externally)."
        },
        "config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Configuration for the forecaster run. Can be a dictionary of parameters or a path to a configuration file.By default, it will point to resources/inference/configs/forecaster.yaml in the evalml repository.",
          "title": "Config"
        }
      },
      "required": [
        "mlflow_id",
        "steps"
      ],
      "title": "ForecasterConfig",
      "type": "object"
    },
    "ForecasterItem": {
      "properties": {
        "forecaster": {
          "$ref": "#/$defs/ForecasterConfig"
        }
      },
      "required": [
        "forecaster"
      ],
      "title": "ForecasterItem",
      "type": "object"
    },
    "GlobalResources": {
      "description": "Define resource limits that apply across all submissions.\n\nThis model is intended to specify global constraints, such as\nthe maximum number of GPUs that can be allocated in parallel,\nregardless of individual job settings.",
      "properties": {
        "gpus": {
          "description": "Maximum number of GPUs that may be used concurrently across all submissions.",
          "minimum": 1,
          "title": "Gpus",
          "type": "integer"
        }
      },
      "required": [
        "gpus"
      ],
      "title": "GlobalResources",
      "type": "object"
    },
    "InferenceResources": {
      "properties": {
        "slurm_partition": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Slurm partition to use for inference jobs, e.g. 'short-shared'.",
          "title": "Slurm Partition"
        },
        "cpus_per_task": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Number of CPUs per task to request.",
          "title": "Cpus Per Task"
        },
        "mem_mb_per_cpu": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Memory (in MB) per CPU to request.",
          "title": "Mem Mb Per Cpu"
        },
        "runtime": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Maximum runtime for the job, e.g. '20m', '2h', '01:30:00'.",
          "title": "Runtime"
        },
        "gpu": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Number of GPUs to request.",
          "title": "Gpu"
        },
        "tasks": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Number of tasks per submission.",
          "title": "Tasks"
        }
      },
      "title": "InferenceResources",
      "type": "object"
    },
    "InterpolatorConfig": {
      "description": "Single training run stored in MLflow.",
      "properties": {
        "mlflow_id": {
          "description": "The mlflow run ID, as a 32-character hexadecimal string.",
          "maxLength": 32,
          "minLength": 32,
          "title": "Mlflow Id",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The label for the run that will be used in experiment results such as reports and figures.",
          "title": "Label"
        },
        "steps": {
          "description": "Forecast lead times in hours, formatted as 'start/end/step'. The range includes the start lead time and continues with the given step until reaching or exceeding the end lead time. Example: '0/120/6' for lead times every 6 hours up to 120 h, or '0/33/6' up to 30 h.",
          "title": "Steps",
          "type": "string"
        },
        "extra_dependencies": {
          "description": "List of extra dependencies to install for this model. These will be added to the pyproject.toml file in the run directory.",
          "items": {
            "type": "string"
          },
          "title": "Extra Dependencies",
          "type": "array"
        },
        "inference_resources": {
          "anyOf": [
            {
              "$ref": "#/$defs/InferenceResources"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Resource requirements for inference jobs (optional; defaults handled externally)."
        },
        "config": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Configuration for the interpolator run. Can be a dictionary of parameters or a path to a configuration file. By default, it will point to resources/inference/configs/interpolator.yaml in the evalml repository.",
          "title": "Config"
        },
        "forecaster": {
          "anyOf": [
            {
              "$ref": "#/$defs/ForecasterConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Configuration for the forecaster run that this interpolator is based on."
        }
      },
      "required": [
        "mlflow_id",
        "steps"
      ],
      "title": "InterpolatorConfig",
      "type": "object"
    },
    "InterpolatorItem": {
      "properties": {
        "interpolator": {
          "$ref": "#/$defs/InterpolatorConfig"
        }
      },
      "required": [
        "interpolator"
      ],
      "title": "InterpolatorItem",
      "type": "object"
    },
    "Locations": {
      "description": "Locations of data and services used in the workflow.",
      "properties": {
        "output_root": {
          "description": "Root directory for all output files.",
          "format": "path",
          "title": "Output Root",
          "type": "string"
        },
        "mlflow_uri": {
          "description": "MLflow tracking URI(s) for the experiment. Can be a list of URIs if using multiple tracking servers.",
          "items": {
            "format": "uri",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string"
          },
          "title": "Mlflow Uri",
          "type": "array"
        }
      },
      "required": [
        "output_root",
        "mlflow_uri"
      ],
      "title": "Locations",
      "type": "object"
    },
    "Profile": {
      "description": "Workflow execution profile.",
      "properties": {
        "executor": {
          "description": "Job executor, e.g. 'slurm'.",
          "title": "Executor",
          "type": "string"
        },
        "global_resources": {
          "$ref": "#/$defs/GlobalResources"
        },
        "default_resources": {
          "$ref": "#/$defs/DefaultResources"
        },
        "jobs": {
          "description": "Maximum number of parallel jobs.",
          "minimum": 1,
          "title": "Jobs",
          "type": "integer"
        },
        "batch_rules": {
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Define batches of the same rule that shall be executed within one job submission.",
          "title": "Batch Rules",
          "type": "object"
        }
      },
      "required": [
        "executor",
        "global_resources",
        "default_resources",
        "jobs"
      ],
      "title": "Profile",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "Top-level configuration.",
  "properties": {
    "description": {
      "description": "Description of the experiment, e.g. 'Hindcast of the 2023 season.'",
      "title": "Description",
      "type": "string"
    },
    "dates": {
      "anyOf": [
        {
          "$ref": "#/$defs/Dates"
        },
        {
          "$ref": "#/$defs/ExplicitDates"
        }
      ],
      "title": "Dates"
    },
    "runs": {
      "description": "Dictionary of runs to execute, with run IDs as keys and configurations as values.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/ForecasterItem"
          },
          {
            "$ref": "#/$defs/InterpolatorItem"
          }
        ]
      },
      "title": "Runs",
      "type": "array"
    },
    "baselines": {
      "description": "Dictionary of baselines to include in the verification.",
      "items": {
        "$ref": "#/$defs/BaselineItem"
      },
      "title": "Baselines",
      "type": "array"
    },
    "analysis": {
      "$ref": "#/$defs/AnalysisConfig"
    },
    "locations": {
      "$ref": "#/$defs/Locations"
    },
    "profile": {
      "$ref": "#/$defs/Profile"
    }
  },
  "required": [
    "description",
    "dates",
    "runs",
    "baselines",
    "analysis",
    "locations",
    "profile"
  ],
  "title": "ConfigModel",
  "type": "object"
}
