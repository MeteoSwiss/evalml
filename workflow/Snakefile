# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,

from evalml.config import ConfigModel

# validate configuration and add defaults
update_config(config, ConfigModel.model_validate(dict(config)).model_dump(mode="json"))


# load rules
# -----------------------------------------------------
include: "rules/common.smk"
include: "rules/data.smk"
include: "rules/inference.smk"
include: "rules/verif.smk"
include: "rules/report.smk"
include: "rules/plot.smk"


# optional messages, log and error handling
# -----------------------------------------------------
onstart:
    print("\n--- Analysis started ---\n")


onsuccess:
    print("\n--- Workflow finished! ---\n")


onerror:
    print("\n--- An error occurred! ---\n")


# target rules
# -----------------------------------------------------
EXPERIMENT_HASH = short_hash_config()


rule experiment_all:
    """Target rule for experiment workflow."""
    input:
        OUT_ROOT / f"results/{EXPERIMENT_HASH}/metrics/dashboard",
        OUT_ROOT / f"results/{EXPERIMENT_HASH}/metrics/plots",


rule showcase_all:
    """Target rule for showcase workflow."""
    input:
        expand(
            OUT_ROOT
            / "showcases/{run_id}/{init_time}/{init_time}_{param}_{projection}_{region}.gif",
            init_time=[t.strftime("%Y%m%d%H%M") for t in REFTIMES],
            run_id=collect_all_runs(),
            param="2t",
            projection="orthographic",
            region="none",
        ),


rule sandbox_all:
    """Target rule for creating a sandbox for inference."""
    input:
        expand(
            rules.create_inference_sandbox.output.sandbox,
            run_id=collect_all_runs(),
        ),


rule run_inference_all:
    """Run inference for all reference times as defined in the configuration."""
    input:
        expand(
            OUT_ROOT / "data/runs/{run_id}/{init_time}/raw",
            init_time=[t.strftime("%Y%m%d%H%M") for t in REFTIMES],
            run_id=collect_all_runs(),
        ),


rule verif_metrics_all:
    input:
        expand(
            rules.verif_metrics.output,
            init_time=[t.strftime("%Y%m%d%H%M") for t in REFTIMES],
            run_id=collect_all_runs(),
        ),


rule verif_metrics_plot_all:
    """Run verification plot metrics for all studies."""
    input:
        expand(
            rules.verif_metrics_plot.output,
            experiment=EXPERIMENT_HASH,
        ),
