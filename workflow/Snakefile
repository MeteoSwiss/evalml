# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,

# from tools.config_schema import ExperimentConfig

# load configuration
# -----------------------------------------------------
# configfile: "config/config.yaml"

# validate configuration
# ExperimentConfig.validate(dict(config))

# load rules
# -----------------------------------------------------
include: "rules/common.smk"
include: "rules/data.smk"
include: "rules/inference.smk"
include: "rules/verif.smk"
include: "rules/report.smk"

# optional messages, log and error handling
# -----------------------------------------------------
onstart:
    print("\n--- Analysis started ---\n")


onsuccess:
    print("\n--- Workflow finished! ---\n")


onerror:
    print("\n--- An error occurred! ---\n")


# target rules
# -----------------------------------------------------
EXPERIMENT_HASH = short_hash_config()

rule all:
    """Final target rule to run all necessary steps."""
    input:
        OUT_ROOT / f"results/{EXPERIMENT_HASH}/dashboard.html",
        OUT_ROOT / f"results/{EXPERIMENT_HASH}/plot_metrics"
    default_target: True


rule run_inference_all:
    """Run inference for all reference times as defined in the configuration."""
    input:
        expand(
            OUT_ROOT / "data/runs/{run_id}/{init_time}/raw",
            init_time=[t.strftime("%Y%m%d%H%M") for t in REFTIMES],
            run_id=collect_all_runs()
        ),


rule run_verif_from_grib_all:
    input:
        expand(
            rules.run_verif_fct.output,
            init_time=[t.strftime("%Y%m%d%H%M") for t in REFTIMES],
            run_id=collect_all_runs()
        ),

# rule extract_cosmoe_fcts_all:
#     """Extract COSMO-E forecasts for the year 2020."""
#     input:
#         expand(rules.extract_cosmoe_fcts.output.fcts, year=[str(y)[-2:] for y in range(2020, 2021)])

rule run_verif_plot_metrics_all:
    """Run verification plot metrics for all studies."""
    input:
        expand(
            rules.run_verif_plot_metrics.output,
            experiment=EXPERIMENT_HASH,
        )
